2024-07-05 23:16:10,207 - ERROR - Failed to save conversation: <!doctype html>
<html lang=en>
  <head>
    <title>UnicodeEncodeError: &#39;cp932&#39; codec can&#39;t encode character &#39;\u4f60&#39; in position 26: illegal multibyte sequence
 // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css">
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script>
      var CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "ONZfXH8wyeTmQPJqpxxk";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>UnicodeEncodeError</h1>
<div class="detail">
  <p class="errormsg">UnicodeEncodeError: &#39;cp932&#39; codec can&#39;t encode character &#39;\u4f60&#39; in position 26: illegal multibyte sequence
</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  <h3></h3>
  <ul><li><div class="frame" id="frame-2943908840720">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1498</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>) -&gt; cabc.Iterable[bytes]:</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app`, which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to apply middleware.</pre>
<pre class="line before"><span class="ws">        </span>&#34;&#34;&#34;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre></div>
</div>

<li><div class="frame" id="frame-2943909307648">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1476</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-2943909307760">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">1473</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error: BaseException | None = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-2943909307872">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">882</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre>
<pre class="line after"><span class="ws">        </span>self,</pre>
<pre class="line after"><span class="ws">        </span>rv: ft.ResponseReturnValue | HTTPException,</pre></div>
</div>

<li><div class="frame" id="frame-2943909307984">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">880</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self, _async_wrapper=self.ensure_sync)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(</pre></div>
</div>

<li><div class="frame" id="frame-2943909308096">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py"</cite>,
      line <em class="line">865</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>and req.method == &#34;OPTIONS&#34;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line before"><span class="ws">        </span>view_args: dict[str, t.Any] = req.view_args  # type: ignore[assignment]</pre>
<pre class="line current"><span class="ws">        </span>return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self) -&gt; Response:</pre>
<pre class="line after"><span class="ws">        </span>&#34;&#34;&#34;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-2943909308208">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\server.py"</cite>,
      line <em class="line">42</em>,
      in <code class="function">conversation</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>user_id = data[&#39;user_id&#39;]  # Extract user_id from the data</pre>
<pre class="line before"><span class="ws">    </span>user_message = data[&#39;user_message&#39;]  # Extract user_message from the data</pre>
<pre class="line before"><span class="ws">    </span>bot_response = data[&#39;bot_response&#39;]  # Extract bot_response from the data</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span># Save the conversation to a log file</pre>
<pre class="line current"><span class="ws">    </span>save_conversation(user_id, user_message, bot_response)</pre>
<pre class="line after"><span class="ws">    </span>return jsonify({&#34;status&#34;: &#34;success&#34;})  # Return a success response</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span># Main entry point of the application</pre>
<pre class="line after"><span class="ws"></span>if __name__ == &#34;__main__&#34;:</pre>
<pre class="line after"><span class="ws">    </span>if not os.path.exists(BASE_DIR):</pre></div>
</div>

<li><div class="frame" id="frame-2943909309104">
  <h4>File <cite class="filename">"D:\danielxxx000\Desktop\AIŽÐŒQ\server.py"</cite>,
      line <em class="line">30</em>,
      in <code class="function">save_conversation</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>os.makedirs(user_dir)  # Create the directory if it doesn&#39;t exist</pre>
<pre class="line before"><span class="ws">    </span>filename = os.path.join(user_dir, f&#34;{user_id}.txt&#34;)  # Log file named after user_id</pre>
<pre class="line before"><span class="ws">    </span>timestamp = datetime.now().strftime(&#34;%Y-%m-%d %H:%M:%S&#34;)  # Generate a timestamp for the log file</pre>
<pre class="line before"><span class="ws">    </span>with open(filename, &#39;a&#39;) as file:  # Append to the log file</pre>
<pre class="line before"><span class="ws">        </span># Write the conversation to the log file</pre>
<pre class="line current"><span class="ws">        </span>file.write(f&#34;{timestamp} User: {user_message}\n&#34;)</pre>
<pre class="line after"><span class="ws">        </span>file.write(f&#34;{timestamp} Bot: {bot_response}\n&#34;)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span># Route to handle conversation logging</pre>
<pre class="line after"><span class="ws"></span>@app.route(&#39;/conversation&#39;, methods=[&#39;POST&#39;])</pre>
<pre class="line after"><span class="ws"></span>def conversation():</pre></div>
</div>
</ul>
  <blockquote>UnicodeEncodeError: &#39;cp932&#39; codec can&#39;t encode character &#39;\u4f60&#39; in position 26: illegal multibyte sequence
</blockquote>
</div>

<div class="plain">
    <p>
      This is the Copy/Paste friendly version of the traceback.
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 1498, in __call__
    return self.wsgi_app(environ, start_response)
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 1476, in wsgi_app
    response = self.handle_exception(e)
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py&#34;, line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\server.py&#34;, line 42, in conversation
    save_conversation(user_id, user_message, bot_response)
  File &#34;D:\danielxxx000\Desktop\AIŽÐŒQ\server.py&#34;, line 30, in save_conversation
    file.write(f&#34;{timestamp} User: {user_message}\n&#34;)
UnicodeEncodeError: &#39;cp932&#39; codec can&#39;t encode character &#39;\u4f60&#39; in position 26: illegal multibyte sequence
</textarea>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 1498, in __call__
    return self.wsgi_app(environ, start_response)
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 1476, in wsgi_app
    response = self.handle_exception(e)
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 1473, in wsgi_app
    response = self.full_dispatch_request()
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 882, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 880, in full_dispatch_request
    rv = self.dispatch_request()
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\.venv\lib\site-packages\flask\app.py", line 865, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\server.py", line 42, in conversation
    save_conversation(user_id, user_message, bot_response)
  File "D:\danielxxx000\Desktop\AIŽÐŒQ\server.py", line 30, in save_conversation
    file.write(f"{timestamp} User: {user_message}\n")
UnicodeEncodeError: 'cp932' codec can't encode character '\u4f60' in position 26: illegal multibyte sequence


-->

